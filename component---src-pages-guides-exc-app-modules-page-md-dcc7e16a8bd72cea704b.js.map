{"version":3,"file":"component---src-pages-guides-exc-app-modules-page-md-dcc7e16a8bd72cea704b.js","mappings":"4SAQaA,EAAe,CAAC,EACvBC,EAAc,CAClBD,aAAAA,GAEIE,EAAYC,EAAAA,EACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,GACF,YACD,OAAO,SAACJ,GAAD,UAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,eAG5E,eACE,GAAM,wBADR,0BAGA,qKAEA,mBAAG,mBAAQC,WAAW,MAAI,eAAIA,WAAW,UAAf,cAC1B,qBAAK,iBAAMA,WAAW,MAClB,UAAa,uBADZ,+CAIL,mBAAG,mBAAQA,WAAW,MAAI,eAAIA,WAAW,UAAf,sBAC1B,mBAAG,cAAGA,WAAW,IACb,KAAQ,mDADT,aAGH,mBAAG,mBAAQA,WAAW,MAAI,eAAIA,WAAW,UAAf,aAC1B,qBAAK,iBAAMA,WAAW,MAClB,UAAa,uBADZ,qbAoBL,eACE,GAAM,SADR,UAGA,eACE,GAAM,cADR,eAGA,oBACE,eAAIA,WAAW,OAAK,cAAGA,WAAW,KAC9B,KAAQ,wCADQ,oBAGpB,eAAIA,WAAW,OAAK,cAAGA,WAAW,KAC9B,KAAQ,wCADQ,oBAGpB,eAAIA,WAAW,OAAK,cAAGA,WAAW,KAC9B,KAAQ,iCADQ,aAGpB,eAAIA,WAAW,OAAK,cAAGA,WAAW,KAC9B,KAAQ,2CADQ,wBAItB,eACE,GAAM,gBADR,iBAGA,oBACE,eAAIA,WAAW,OAAK,cAAGA,WAAW,KAC9B,KAAQ,wBADQ,mBAItB,eACE,GAAM,kBADR,iBAGA,eACE,GAAM,gBADR,iBAGA,wBAAS,mBAAQA,WAAW,KAAnB,gBAAT,MAA+D,eAAIA,WAAW,MAAI,cAAGA,WAAW,KAC1F,KAAQ,wCADoE,kBAAnB,OAE3B,cAAGA,WAAW,KAC5C,KAAQ,wCADsB,qBAGpC,0IAEA,mBAAG,mBAAQA,WAAW,MAAI,eAAIA,WAAW,UAAf,eAC1B,mBAAG,uBAAYA,WAAW,KAAvB,kBAAH,QAAqE,uBAAYA,WAAW,KAAvB,sCAGxE,CAEDJ,EAAWK,gBAAiB,C","sources":["webpack://adobe-developer-app-builder/./src/pages/guides/exc_app/modules/page.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/adobe-developer-app-builder/adobe-developer-app-builder/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"external-module-page\"\n    }}>{`External module: page`}</h1>\n    <p>{`APIs that let solutions interact with the main page and personalize it, e.g. setting the title,\nfavicon, refreshing the solution iframe, etc.`}</p>\n    <p><strong parentName=\"p\"><em parentName=\"strong\">{`Import:`}</em></strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-typescript\"\n      }}>{`import page from '@adobe/exc-app/page';\n`}</code></pre>\n    <p><strong parentName=\"p\"><em parentName=\"strong\">{`Default export:`}</em></strong></p>\n    <p><a parentName=\"p\" {...{\n        \"href\": \"../interfaces/page.pageapi.md#interface-pageapi\"\n      }}>{`PageApi`}</a></p>\n    <p><strong parentName=\"p\"><em parentName=\"strong\">{`Usage:`}</em></strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-typescript\"\n      }}>{`import page from '@adobe/exc-app/page';\n\npage.title = 'Experience Cloud';\n\n// Show spinner while performing an async operation\npage.spinner = true;\ntry {\n  await performOperation();\n} finally {\n  page.spinner = false;\n}\n\n// Generate a shell URL that directly opens the specified solution URL\nconst shellUrl = page.generateShellUrl('/relative/path');\n\n// Navigate to another solution\npage.shellRedirect('/target');\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"index\"\n    }}>{`Index`}</h2>\n    <h3 {...{\n      \"id\": \"interfaces\"\n    }}>{`Interfaces`}</h3>\n    <ul>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"../interfaces/page.objectwithhref.md\"\n        }}>{`ObjectWithHref`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"../interfaces/page.objectwithpath.md\"\n        }}>{`ObjectWithPath`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"../interfaces/page.pageapi.md\"\n        }}>{`PageApi`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"../interfaces/page.pageapiproperties.md\"\n        }}>{`PageApiProperties`}</a></li>\n    </ul>\n    <h3 {...{\n      \"id\": \"type-aliases\"\n    }}>{`Type aliases`}</h3>\n    <ul>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"page.md#locationlike\"\n        }}>{`LocationLike`}</a></li>\n    </ul>\n    <h2 {...{\n      \"id\": \"type-aliases-1\"\n    }}>{`Type aliases`}</h2>\n    <h3 {...{\n      \"id\": \"locationlike\"\n    }}>{`LocationLike`}</h3>\n    <p>{`Æ¬ `}<strong parentName=\"p\">{`LocationLike`}</strong>{`: `}<em parentName=\"p\"><a parentName=\"em\" {...{\n          \"href\": \"../interfaces/page.objectwithhref.md\"\n        }}>{`ObjectWithHref`}</a>{` | `}<a parentName=\"em\" {...{\n          \"href\": \"../interfaces/page.objectwithpath.md\"\n        }}>{`ObjectWithPath`}</a></em></p>\n    <p>{`Defines the location-like object for which to get the shell URL. You can either specify a path or\nan absolute URL.`}</p>\n    <p><strong parentName=\"p\"><em parentName=\"strong\">{`Example:`}</em></strong></p>\n    <p><inlineCode parentName=\"p\">{`{path: '/abc'}`}</inlineCode>{` or `}<inlineCode parentName=\"p\">{`{href: 'https://example.com/abc'}`}</inlineCode></p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"sourceRoot":""}