{"version":3,"file":"component---src-pages-resources-barcode-reader-barcode-md-7a765231dcd18c78974e.js","mappings":"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","sources":["webpack://adobe-developer-app-builder/./src/pages/resources/barcode-reader/barcode.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/adobe-developer-app-builder/adobe-developer-app-builder/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"lesson-2-writing-a-serverless-action\"\n    }}>{`Lesson 2: Writing a Serverless Action`}</h1>\n    <p>{`There are many existing npm packages to display a barcode. Some don't play well in serverless environments.\nFor this codelab, we'll use `}<a parentName=\"p\" {...{\n        \"href\": \"https://www.npmjs.com/package/bwip-js/\"\n      }}>{`bwip-js`}</a>{` to render a code128 barcode. `}</p>\n    <h2 {...{\n      \"id\": \"barcode-action\"\n    }}>{`Barcode action`}</h2>\n    <p>{`First, install the dependency with: `}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`npm i bwip-js --save\n`}</code></pre>\n    <p>{`Then import the dependency in your action: `}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`const bwipjs = require('bwip-js');\n`}</code></pre>\n    <p>{`Now we can use the library and generate a barcode buffer in the exported main function:  `}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`const buffer = await bwipjs.toBuffer({\n  bcid: 'code128',\n  text: params.value,\n  scale: 3,\n  height: 10,\n  includetext: false,\n});\n`}</code></pre>\n    <p>{`Notice that we defined a `}<inlineCode parentName=\"p\">{`value`}</inlineCode>{` parameter to be passed to the barcode generator configuration.\nThis is the actual data that the barcode will be holding. `}</p>\n    <p>{`Then we can return the image representation of the buffer with: `}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`return {\n  headers: { 'Content-Type': 'image/png' },\n  statusCode: 200,\n  body: buffer.toString('base64')\n};\n`}</code></pre>\n    <p>{`Finally we can add checks to verify the requested `}<inlineCode parentName=\"p\">{`value`}</inlineCode>{` parameter, add logging and appropriate error handling to obtain following action: `}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`const { Core } = require('@adobe/aio-sdk');\nconst { errorResponse, stringParameters, checkMissingRequestInputs } = require('../utils');\nconst bwipjs = require('bwip-js');\n\n// main function that will be executed by Adobe I/O Runtime\nasync function main (params) {\n  // create a Logger\n  const logger = Core.Logger('main', { level: params.LOG_LEVEL || 'info' });\n\n  try {\n    // 'info' is the default level if not set\n    logger.info('Calling the main action');\n\n    // log parameters, only if params.LOG_LEVEL === 'debug'\n    logger.debug(stringParameters(params));\n\n    // check for missing request input parameters and headers\n    const requiredParams = ['value'];\n    const errorMessage = checkMissingRequestInputs(params, requiredParams);\n    if (errorMessage) {\n      // return and log client errors\n      return errorResponse(400, errorMessage, logger);\n    }\n  \n    const buffer = await bwipjs.toBuffer({\n      bcid: 'code128',\n      text: params.value,\n      scale: 3,\n      height: 10,\n      includetext: false,\n      backgroundcolor: 'ffffff'\n    });\n    \n    return {\n      headers: { 'Content-Type': 'image/png' },\n      statusCode: 200,\n      body: buffer.toString('base64')\n    };\n  } catch (error) {\n    // log any server errors\n    logger.error(error);\n    // return with 500\n    return errorResponse(500, error.message, logger);\n  }\n}\n\nexports.main = main;\n\n`}</code></pre>\n    <p>{`You can run the action locally using the CLI with: `}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`aio app run --local\n`}</code></pre>\n    <p>{`which will: `}</p>\n    <ol>\n      <li parentName=\"ol\">{`Start a local `}<a parentName=\"li\" {...{\n          \"href\": \"https://openwhisk.apache.org/\"\n        }}>{`OpenWhisk`}</a>{` stack on Docker. `}</li>\n      <li parentName=\"ol\">{`Package and deploy the Runtime action and its dependencies using a built-in webpack configuration.   `}</li>\n      <li parentName=\"ol\">{`Start a local development environment and provide the action url e.g. `}<inlineCode parentName=\"li\">{`http://localhost:3233/api/v1/web/guest/my-barcode-app-0.0.1/barcode`}</inlineCode>{` for testing and debugging. `}</li>\n    </ol>\n    <p>{`Note that we'll cover how to do debug an App Builder app in another codelab.`}</p>\n    <p>{`Now if you add the value parameter to the url e.g. `}<inlineCode parentName=\"p\">{`?value=test`}</inlineCode>{`, the action should generate a barcode:`}</p>\n    <p><span parentName=\"p\" {...{\n        \"className\": \"gatsby-resp-image-wrapper\",\n        \"style\": {\n          \"position\": \"relative\",\n          \"display\": \"block\",\n          \"marginLeft\": \"auto\",\n          \"marginRight\": \"auto\",\n          \"maxWidth\": \"237px\"\n        }\n      }}>{`\n      `}<span parentName=\"span\" {...{\n          \"className\": \"gatsby-resp-image-background-image\",\n          \"style\": {\n            \"paddingBottom\": \"36.708860759493675%\",\n            \"position\": \"relative\",\n            \"bottom\": \"0\",\n            \"left\": \"0\",\n            \"display\": \"block\",\n            \"transition\": \"opacity 0.5s 0.5s\",\n            \"pointerEvents\": \"none\"\n          }\n        }}></span>{`\n  `}<picture parentName=\"span\">{`\n          `}<source parentName=\"picture\" {...{\n            \"srcSet\": [\"/adobe-developer-app-builder/static/42d6206cf6b410b59dd142539a08e9d5/2f234/barcode-test.webp 237w\"],\n            \"sizes\": \"(max-width: 237px) 100vw, 237px\",\n            \"type\": \"image/webp\"\n          }}></source>{`\n          `}<source parentName=\"picture\" {...{\n            \"srcSet\": [\"/adobe-developer-app-builder/static/42d6206cf6b410b59dd142539a08e9d5/2f5e9/barcode-test.png 237w\"],\n            \"sizes\": \"(max-width: 237px) 100vw, 237px\",\n            \"type\": \"image/png\"\n          }}></source>{`\n          `}<img parentName=\"picture\" {...{\n            \"className\": \"gatsby-resp-image-image\",\n            \"src\": \"/adobe-developer-app-builder/static/42d6206cf6b410b59dd142539a08e9d5/2f5e9/barcode-test.png\",\n            \"alt\": \"barcode\",\n            \"title\": \"barcode\",\n            \"loading\": \"lazy\",\n            \"style\": {\n              \"width\": \"100%\",\n              \"height\": \"100%\",\n              \"margin\": \"0\",\n              \"verticalAlign\": \"middle\",\n              \"position\": \"absolute\",\n              \"opacity\": \"0\",\n              \"transition\": \"opacity 0.5s\",\n              \"color\": \"inherit\",\n              \"boxShadow\": \"inset 0px 0px 0px 400px none\",\n              \"top\": \"0\",\n              \"left\": \"0\"\n            }\n          }}></img>{`\n        `}</picture>{`\n    `}</span></p>\n    <h2 {...{\n      \"id\": \"deploying\"\n    }}>{`Deploying`}</h2>\n    <p>{`You can deploy an App Builder Headless app with `}<inlineCode parentName=\"p\">{`aio app run`}</inlineCode>{` or `}<inlineCode parentName=\"p\">{`aio app deploy`}</inlineCode>{`. This will deploy the actions to Adobe I/O Runtime.\n`}<inlineCode parentName=\"p\">{`aio app deploy`}</inlineCode>{` would have deployed the UI to a CDN but since we don't have any UI, that step is simply ignored. We'll have a separate codelab to guide you through building an App Builder App with UI.`}</p>\n    <p>{`Make sure to set your Adobe I/O Runtime secrets (namespace and auth) in the `}<inlineCode parentName=\"p\">{`.env`}</inlineCode>{` file.\nWe'll also turn off the built-in authentication by setting `}<inlineCode parentName=\"p\">{`require-adobe-auth: false`}</inlineCode>{` in the `}<inlineCode parentName=\"p\">{`manifest.yml`}</inlineCode>{`.`}<br parentName=\"p\"></br>{`\n`}{`The security topic will be covered in a dedicated codelab.`}</p>\n    <p>{`Hitting deploy with the CLI will output the deployed action url:`}</p>\n    <p><span parentName=\"p\" {...{\n        \"className\": \"gatsby-resp-image-wrapper\",\n        \"style\": {\n          \"position\": \"relative\",\n          \"display\": \"block\",\n          \"marginLeft\": \"auto\",\n          \"marginRight\": \"auto\",\n          \"maxWidth\": \"1132px\"\n        }\n      }}>{`\n      `}<span parentName=\"span\" {...{\n          \"className\": \"gatsby-resp-image-background-image\",\n          \"style\": {\n            \"paddingBottom\": \"63.74999999999999%\",\n            \"position\": \"relative\",\n            \"bottom\": \"0\",\n            \"left\": \"0\",\n            \"display\": \"block\",\n            \"transition\": \"opacity 0.5s 0.5s\",\n            \"pointerEvents\": \"none\"\n          }\n        }}></span>{`\n  `}<picture parentName=\"span\">{`\n          `}<source parentName=\"picture\" {...{\n            \"srcSet\": [\"/adobe-developer-app-builder/static/c6e9fba481e98d6782d4ef783d3654b7/5530d/deploy.webp 320w\", \"/adobe-developer-app-builder/static/c6e9fba481e98d6782d4ef783d3654b7/0c8fb/deploy.webp 640w\", \"/adobe-developer-app-builder/static/c6e9fba481e98d6782d4ef783d3654b7/2201a/deploy.webp 1132w\"],\n            \"sizes\": \"(max-width: 1132px) 100vw, 1132px\",\n            \"type\": \"image/webp\"\n          }}></source>{`\n          `}<source parentName=\"picture\" {...{\n            \"srcSet\": [\"/adobe-developer-app-builder/static/c6e9fba481e98d6782d4ef783d3654b7/dd4a7/deploy.png 320w\", \"/adobe-developer-app-builder/static/c6e9fba481e98d6782d4ef783d3654b7/0f09e/deploy.png 640w\", \"/adobe-developer-app-builder/static/c6e9fba481e98d6782d4ef783d3654b7/abe8a/deploy.png 1132w\"],\n            \"sizes\": \"(max-width: 1132px) 100vw, 1132px\",\n            \"type\": \"image/png\"\n          }}></source>{`\n          `}<img parentName=\"picture\" {...{\n            \"className\": \"gatsby-resp-image-image\",\n            \"src\": \"/adobe-developer-app-builder/static/c6e9fba481e98d6782d4ef783d3654b7/abe8a/deploy.png\",\n            \"alt\": \"deploy\",\n            \"title\": \"deploy\",\n            \"loading\": \"lazy\",\n            \"style\": {\n              \"width\": \"100%\",\n              \"height\": \"100%\",\n              \"margin\": \"0\",\n              \"verticalAlign\": \"middle\",\n              \"position\": \"absolute\",\n              \"opacity\": \"0\",\n              \"transition\": \"opacity 0.5s\",\n              \"color\": \"inherit\",\n              \"boxShadow\": \"inset 0px 0px 0px 400px none\",\n              \"top\": \"0\",\n              \"left\": \"0\"\n            }\n          }}></img>{`\n        `}</picture>{`\n    `}</span>{`  `}</p>\n    <p><strong parentName=\"p\">{`Congratulations ! Your first App Builder Headless App is live.`}</strong>{` `}</p>\n    <p>{`How can we test that the passed value is actually rendered as a barcode ? Luckily for us, there are also barcode readers that we can leverage in our tests.`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"sourceRoot":""}