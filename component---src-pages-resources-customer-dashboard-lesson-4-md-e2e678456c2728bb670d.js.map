{"version":3,"file":"component---src-pages-resources-customer-dashboard-lesson-4-md-e2e678456c2728bb670d.js","mappings":"4SAQaA,EAAe,CAAC,EACvBC,EAAc,CAClBD,aAAAA,GAEIE,EAAYC,EAAAA,EACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,GACF,YACD,OAAO,SAACJ,GAAD,UAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,eAG5E,eACE,GAAM,iDADR,mDAGA,+CAAgC,cAAGC,WAAW,IAC1C,KAAQ,8DADoB,kBAAhC,0FAEqH,cAAGA,WAAW,IAC/H,KAAQ,wBADyG,0BAFrH,QAKA,6BAAc,cAAGA,WAAW,IACxB,KAAQ,cADE,mBAAd,mNAGA,sCAAuB,uBAAYA,WAAW,KAAvB,sBAAvB,uEAA4J,uBAAYA,WAAW,KAAvB,YAA5J,4CAA4P,uBAAYA,WAAW,KAAvB,UAA5P,SAAuT,uBAAYA,WAAW,KAAvB,UAAvT,wHAAie,uBAAYA,WAAW,KAAvB,gBAAje,4HAAqpB,uBAAYA,WAAW,KAAvB,aAArpB,iCACA,oDAAqC,uBAAYA,WAAW,KAAvB,WAArC,MACA,qBAAK,iBAAMA,WAAW,MAClB,UAAa,uBADZ,gzEA6EL,mBAAG,eAAIA,WAAW,KAAf,6OACH,0BAAW,uBAAYA,WAAW,KAAvB,QAAX,kCAA6F,uBAAYA,WAAW,KAAvB,OAA7F,mBAA+J,uBAAYA,WAAW,KAAvB,aAA/J,gIAAoV,uBAAYA,WAAW,KAAvB,OAApV,2DAA8b,uBAAYA,WAAW,KAAvB,UAA9b,WACA,qBAAK,iBAAMA,WAAW,MAClB,UAAa,uBADZ,gCAIL,kEAAmD,uBAAYA,WAAW,KAAvB,eAAnD,yDAAmK,cAAGA,WAAW,IAC7K,KAAQ,wFADuJ,wFAAnK,4BAGA,mBAAG,iBAAMA,WAAW,IAChB,UAAa,4BACb,MAAS,CACP,SAAY,WACZ,QAAW,QACX,WAAc,OACd,YAAe,OACf,SAAY,WAPf,YAUC,iBAAMA,WAAW,OACf,UAAa,qCACb,MAAS,CACP,cAAiB,WACjB,SAAY,WACZ,OAAU,IACV,KAAQ,IACR,QAAW,QACX,WAAc,oBACd,cAAiB,UAnBtB,QAsBH,oBAASA,WAAW,QAApB,gBACQ,mBAAQA,WAAW,UACnB,OAAU,CAAC,mGAAoG,mGAAoG,oGAAqG,oGAAqG,qGAC7Z,MAAS,oCACT,KAAQ,eAJhB,gBAMQ,mBAAQA,WAAW,UACnB,OAAU,CAAC,kGAAmG,kGAAmG,mGAAoG,mGAAoG,oGACzZ,MAAS,oCACT,KAAQ,cAThB,gBAWQ,gBAAKA,WAAW,UAChB,UAAa,0BACb,IAAO,6FACP,IAAO,cACP,MAAS,cACT,QAAW,OACX,MAAS,CACP,MAAS,OACT,OAAU,OACV,OAAU,IACV,cAAiB,SACjB,SAAY,WACZ,QAAW,IACX,WAAc,eACd,MAAS,UACT,UAAa,+BACb,IAAO,IACP,KAAQ,OA5BlB,cAtBG,WAyDN,CAEDJ,EAAWK,gBAAiB,C","sources":["webpack://adobe-developer-app-builder/./src/pages/resources/customer-dashboard/lesson4.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/adobe-developer-app-builder/adobe-developer-app-builder/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"lesson-4-list-all-customer-profiles-on-the-ui\"\n    }}>{`Lesson 4: List All Customer Profiles on the UI`}</h1>\n    <p>{`The app UI is powered by `}<a parentName=\"p\" {...{\n        \"href\": \"https://react-spectrum.adobe.com/react-spectrum/index.html\"\n      }}>{`React Spectrum`}</a>{` by default. To learn more about React Spectrum, you're recommended to go through the `}<a parentName=\"p\" {...{\n        \"href\": \"../todo-app/index.md\"\n      }}>{`React Spectrum Codelab`}</a>{`.  `}</p>\n    <p>{`In the `}<a parentName=\"p\" {...{\n        \"href\": \"lesson3.md\"\n      }}>{`previous lesson`}</a>{`, customer profiles are only loaded to the frontend once you click the \"Invoke\" button. Now we want the profiles automatically loaded on the Home page when the page is ready, without any human interaction. `}</p>\n    <p>{`We will use the `}<inlineCode parentName=\"p\">{`componentWillMount`}</inlineCode>{` method to initiate loading profiles, and store the loaded data in `}<inlineCode parentName=\"p\">{`profiles`}</inlineCode>{` param of the component's state. We use `}<inlineCode parentName=\"p\">{`<Flex>`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`<Grid>`}</inlineCode>{` from React Spectrum to layout spectrum components on the page. Each entry of the customer profiles returned by the `}<inlineCode parentName=\"p\">{`get-profiles`}</inlineCode>{` action is displayed with first name, last name, and email of the customers. You can also apply some CSS styling in the `}<inlineCode parentName=\"p\">{`index.css`}</inlineCode>{` file to make it look nice. `}</p>\n    <p>{`Below is the complete code of `}<inlineCode parentName=\"p\">{`Home.js`}</inlineCode>{`.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Flex, Grid, ProgressCircle, Heading, Text, View } from '@adobe/react-spectrum'\nimport actions from '../config.json'\nimport actionWebInvoke from '../utils'\n\nclass Home extends React.Component {\n  constructor (props) {\n    super(props)\n\n    this.state = {\n      actionResponseError: null,\n      actionInvokeInProgress: false,\n      profiles: null\n    }\n  }\n\n  async componentWillMount () {\n    this.setState({ actionInvokeInProgress: true })\n    \n    const headers = {}\n    const params = {}\n  \n    // set the authorization header and org from the ims props object\n    if (this.props.ims.token && !headers.authorization) {\n      headers.authorization = 'Bearer ' + this.props.ims.token\n    }\n    if (this.props.ims.org && !headers['x-gw-ims-org-id']) {\n      headers['x-gw-ims-org-id'] = this.props.ims.org\n    }\n    try {\n      const actionResponse = await actionWebInvoke(actions['get-profiles'], headers, params)\n      this.setState({ profiles: actionResponse.body.content, actionResponseError: null, actionInvokeInProgress: false })\n      console.log(\\`action response:\\`, actionResponse)\n    } catch (e) {\n      console.error(e)\n      this.setState({ profiles: null, actionResponseError: e.message, actionInvokeInProgress: false })\n    }\n  }\n\n  render () {\n    const profiles = this.state.profiles\n    console.log(\\`profiles object:\\`, profiles)\n    return (\n      <View>\n        <Heading level={1}>Customer Profiles</Heading>\n        <Flex UNSAFE_className='profiles'>\n          <ProgressCircle\n                UNSAFE_className='actions-invoke-progress'\n                aria-label='loading'\n                isIndeterminate\n                isHidden={ !this.state.actionInvokeInProgress }/>\n          { !!profiles &&\n            <Grid>\n              {profiles.map((profile, i) => {\n                return <Flex UNSAFE_className='profile'>Name: { profile['firstName'] } { profile['lastName'] } - Email: { profile['email'] } - Date of birth: { profile['birthDate'] }</Flex>\n              })}\n\n            </Grid>\n          }\n          { !profiles &&\n            <Text>No profiles!</Text>\n          }\n        </Flex>\n      </View>\n    )\n  }\n}\n\nHome.propTypes = {\n  ims: PropTypes.any\n}\n\nexport default Home\n`}</code></pre>\n    <p><em parentName=\"p\">{`Note: For simplicity of the lab, we only display the first page of the result. In a real environment, where there are hundreds of profiles, results are returned in batches, so you will need to handle pagination of data accordingly.`}</em></p>\n    <p>{`The `}<inlineCode parentName=\"p\">{`Home`}</inlineCode>{` component above requires the `}<inlineCode parentName=\"p\">{`ims`}</inlineCode>{` object in its `}<inlineCode parentName=\"p\">{`propTypes`}</inlineCode>{` to get the IMS context for calling the backend actions (including access token and org ID). This object is passed from the `}<inlineCode parentName=\"p\">{`App`}</inlineCode>{` component, so it has to be updated accordingly in the `}<inlineCode parentName=\"p\">{`App.js`}</inlineCode>{` file.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`<Home ims={props.ims} />\n`}</code></pre>\n    <p>{`As your app is already running once you ran `}<inlineCode parentName=\"p\">{`aio app run`}</inlineCode>{` in the previous lesson, just refresh the webpage at `}<a parentName=\"p\" {...{\n        \"href\": \"https://experience.adobe.com/?devMode=true#/apps/?localDevUrl=https://localhost:9080\"\n      }}>{`https://experience.adobe.com/?devMode=true#/apps/?localDevUrl=https://localhost:9080`}</a>{` to see the updated UI.`}</p>\n    <p><span parentName=\"p\" {...{\n        \"className\": \"gatsby-resp-image-wrapper\",\n        \"style\": {\n          \"position\": \"relative\",\n          \"display\": \"block\",\n          \"marginLeft\": \"auto\",\n          \"marginRight\": \"auto\",\n          \"maxWidth\": \"1280px\"\n        }\n      }}>{`\n      `}<span parentName=\"span\" {...{\n          \"className\": \"gatsby-resp-image-background-image\",\n          \"style\": {\n            \"paddingBottom\": \"47.8125%\",\n            \"position\": \"relative\",\n            \"bottom\": \"0\",\n            \"left\": \"0\",\n            \"display\": \"block\",\n            \"transition\": \"opacity 0.5s 0.5s\",\n            \"pointerEvents\": \"none\"\n          }\n        }}></span>{`\n  `}<picture parentName=\"span\">{`\n          `}<source parentName=\"picture\" {...{\n            \"srcSet\": [\"/adobe-developer-app-builder/static/cdd0358a9fdfa4e7ee8595a4e7f746bc/5530d/ui-profiles.webp 320w\", \"/adobe-developer-app-builder/static/cdd0358a9fdfa4e7ee8595a4e7f746bc/0c8fb/ui-profiles.webp 640w\", \"/adobe-developer-app-builder/static/cdd0358a9fdfa4e7ee8595a4e7f746bc/94b1e/ui-profiles.webp 1280w\", \"/adobe-developer-app-builder/static/cdd0358a9fdfa4e7ee8595a4e7f746bc/0b34d/ui-profiles.webp 1920w\", \"/adobe-developer-app-builder/static/cdd0358a9fdfa4e7ee8595a4e7f746bc/c8b27/ui-profiles.webp 1922w\"],\n            \"sizes\": \"(max-width: 1280px) 100vw, 1280px\",\n            \"type\": \"image/webp\"\n          }}></source>{`\n          `}<source parentName=\"picture\" {...{\n            \"srcSet\": [\"/adobe-developer-app-builder/static/cdd0358a9fdfa4e7ee8595a4e7f746bc/dd4a7/ui-profiles.png 320w\", \"/adobe-developer-app-builder/static/cdd0358a9fdfa4e7ee8595a4e7f746bc/0f09e/ui-profiles.png 640w\", \"/adobe-developer-app-builder/static/cdd0358a9fdfa4e7ee8595a4e7f746bc/bbbf7/ui-profiles.png 1280w\", \"/adobe-developer-app-builder/static/cdd0358a9fdfa4e7ee8595a4e7f746bc/ac7a9/ui-profiles.png 1920w\", \"/adobe-developer-app-builder/static/cdd0358a9fdfa4e7ee8595a4e7f746bc/e05f4/ui-profiles.png 1922w\"],\n            \"sizes\": \"(max-width: 1280px) 100vw, 1280px\",\n            \"type\": \"image/png\"\n          }}></source>{`\n          `}<img parentName=\"picture\" {...{\n            \"className\": \"gatsby-resp-image-image\",\n            \"src\": \"/adobe-developer-app-builder/static/cdd0358a9fdfa4e7ee8595a4e7f746bc/bbbf7/ui-profiles.png\",\n            \"alt\": \"ui-profiles\",\n            \"title\": \"ui-profiles\",\n            \"loading\": \"lazy\",\n            \"style\": {\n              \"width\": \"100%\",\n              \"height\": \"100%\",\n              \"margin\": \"0\",\n              \"verticalAlign\": \"middle\",\n              \"position\": \"absolute\",\n              \"opacity\": \"0\",\n              \"transition\": \"opacity 0.5s\",\n              \"color\": \"inherit\",\n              \"boxShadow\": \"inset 0px 0px 0px 400px none\",\n              \"top\": \"0\",\n              \"left\": \"0\"\n            }\n          }}></img>{`\n        `}</picture>{`\n    `}</span></p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"sourceRoot":""}