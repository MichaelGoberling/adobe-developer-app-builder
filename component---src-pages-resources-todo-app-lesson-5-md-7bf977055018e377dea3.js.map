{"version":3,"file":"component---src-pages-resources-todo-app-lesson-5-md-7bf977055018e377dea3.js","mappings":"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","sources":["webpack://adobe-developer-app-builder/./src/pages/resources/todo-app/lesson5.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/adobe-developer-app-builder/adobe-developer-app-builder/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"lesson-5-setup-the-todolist-component\"\n    }}>{`Lesson 5: Setup the TodoList component`}</h1>\n    <p>{`In this lesson, we'll create a TodoList React component that will be able to: `}</p>\n    <ul>\n      <li parentName=\"ul\">{`Create a new Todo item.`}</li>\n      <li parentName=\"ul\">{`Delete the whole todo list. `}</li>\n      <li parentName=\"ul\">{`Display Todo items we have built in the previous lesson.  `}</li>\n    </ul>\n    <p>{`We'll create the React component file under `}<inlineCode parentName=\"p\">{`web-src/src/components/`}</inlineCode>{` and name it `}<inlineCode parentName=\"p\">{`TodoList.js`}</inlineCode>{`.`}</p>\n    <h2 {...{\n      \"id\": \"import-react-spectrum-components\"\n    }}>{`Import React Spectrum components`}</h2>\n    <p>{`This component will make use of several React Spectrum components: `}</p>\n    <ul>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://react-spectrum.adobe.com/react-spectrum/View.html\"\n        }}>{`View`}</a>{` a generic container.`}</li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://react-spectrum.adobe.com/react-spectrum/Well.html\"\n        }}>{`Well`}</a>{` a generic pre-styled container which will contain the todo list.`}</li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://react-spectrum.adobe.com/react-spectrum/Flex.html\"\n        }}>{`Flex`}</a>{` for the layout.`}</li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://react-spectrum.adobe.com/react-spectrum/Form.html\"\n        }}>{`Form`}</a>{` to submit the todo.`}</li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://react-spectrum.adobe.com/react-spectrum/TextField.html\"\n        }}>{`TextField`}</a>{` the input field for the todo value.`}</li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://react-spectrum.adobe.com/react-spectrum/ActionButton.html\"\n        }}>{`ActionButton`}</a>{` to trigger form submission.`}</li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://react-spectrum.adobe.com/react-spectrum/AlertDialog.html\"\n        }}>{`AlertDialog`}</a>{` to warn the user before deleting a todo list.`}</li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://react-spectrum.adobe.com/react-spectrum/DialogTrigger.html\"\n        }}>{`DialogTrigger`}</a>{` to open the AlertDialog.`}</li>\n    </ul>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`import { View, Flex, Form, TextField, ActionButton, AlertDialog, DialogTrigger, Well } from '@adobe/react-spectrum';\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"component-properties\"\n    }}>{`Component properties`}</h2>\n    <p>{`The component will accept 3 properties:`}</p>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`todoList`}</inlineCode>{` which corresponds to the todo list object which holds the todo list name and todo items.  `}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`onDelete`}</inlineCode>{` the callback function to delete a todo list.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`onUpdate`}</inlineCode>{` the callback function to update a todo list.`}</li>\n    </ul>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`function TodoList({ todoList, onDelete, onUpdate }) {\n  const { name, todos } = todoList;\n  // ...\n}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"spectrum-icons\"\n    }}>{`Spectrum Icons`}</h2>\n    <p>{`We'll add `}<a parentName=\"p\" {...{\n        \"href\": \"https://react-spectrum.adobe.com/react-spectrum/workflow-icons.html\"\n      }}>{`React Spectrum Workflow Icons`}</a>{` to the `}<inlineCode parentName=\"p\">{`TodoList`}</inlineCode>{` component. The icons are simply SVGs packed as React components.`}<br parentName=\"p\"></br>{`\n`}{`To import icons, you have to install the `}<inlineCode parentName=\"p\">{`@spectrum-icons/workflow`}</inlineCode>{` dependency. It's pre-installed if you initialize the App Builder app with the React Spectrum template.`}</p>\n    <p>{`Each icon has to be imported individually with a single statement.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`import TaskList from '@spectrum-icons/workflow/TaskList';\nimport Close from '@spectrum-icons/workflow/Close';\nimport Add from '@spectrum-icons/workflow/Add';\n`}</code></pre>\n    <p>{`A `}<a parentName=\"p\" {...{\n        \"href\": \"https://spectrum.adobe.com/page/icons/\"\n      }}>{`searchable list of workflow icons`}</a>{` is available on the Spectrum website. The name of the icon without any whitespace matches the import in React Spectrum.  `}</p>\n    <h2 {...{\n      \"id\": \"displaying-the-todo-list-name\"\n    }}>{`Displaying the todo list name`}</h2>\n    <p>{`React Spectrum has made available a set of components and keeps delivering new components with every release. Unfortunately, some components are not available yet in React Spectrum but available in `}<a parentName=\"p\" {...{\n        \"href\": \"https://opensource.adobe.com/spectrum-css/\"\n      }}>{`Spectrum CSS`}</a>{` which is the CSS framework used by React Spectrum to style components.\nLuckily for us, we can use React Spectrum together with Spectrum CSS to fill the gap of missing components.`}</p>\n    <p>{`In this case, we're going to install the `}<a parentName=\"p\" {...{\n        \"href\": \"https://opensource.adobe.com/spectrum-css/typography.html\"\n      }}>{`Spectrum CSS Typography`}</a>{` dependency to render Spectrum headings.\nSince React Spectrum already defines the Spectrum CSS variables, you'll only need to install the Spectrum CSS Typography package.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`npm i --save @spectrum-css/typography\n`}</code></pre>\n    <p>{`Then you can simply import the CSS with:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`import '@spectrum-css/typography';\n`}</code></pre>\n    <p>{`Now you can use the Spectrum CSS Heading classes to render the todo list name.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`<h2 className=\"spectrum-Heading spectrum-Heading--sizeM spectrum-Heading--serif\">{name}</h2>\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"rendering-todo-items\"\n    }}>{`Rendering todo items`}</h2>\n    <p>{`Once again, we're going to use the `}<a parentName=\"p\" {...{\n        \"href\": \"https://reactjs.org/docs/hooks-state.html\"\n      }}>{`State hook`}</a>{` `}<inlineCode parentName=\"p\">{`useState`}</inlineCode>{` to declare a state variable which will hold a list of todo items.\nThis list will be updated whenever a new todo item is created. By default, it's initialized with the `}<inlineCode parentName=\"p\">{`todos`}</inlineCode>{` from the `}<inlineCode parentName=\"p\">{`todoList`}</inlineCode>{` prop. `}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`const [todoItems, setTodoItems] = useState(todos);\n`}</code></pre>\n    <p>{`Next we'll iterate over the `}<inlineCode parentName=\"p\">{`todoItems`}</inlineCode>{` array using the `}<a parentName=\"p\" {...{\n        \"href\": \"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map\"\n      }}>{`map()`}</a>{` function to render each item as `}<inlineCode parentName=\"p\">{`Todo`}</inlineCode>{` component.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`<View marginTop=\"size-100\">\n  {todoItems.map((todo) => (\n    <Todo key={todo.id} name={name} todo={todo} onUpdate={onUpdate} />\n  ))}\n</View>\n`}</code></pre>\n    <p>{`The `}<inlineCode parentName=\"p\">{`key`}</inlineCode>{` property is necessary in React to uniquely identify the todo item. In this case, we use the todo id.\nYou can read more about React lists and keys `}<a parentName=\"p\" {...{\n        \"href\": \"https://reactjs.org/docs/lists-and-keys.html\"\n      }}>{`here`}</a>{`.`}</p>\n    <p>{`We're also passing the `}<inlineCode parentName=\"p\">{`name`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`todo`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`onUpdate`}</inlineCode>{` props down to the `}<inlineCode parentName=\"p\">{`Todo`}</inlineCode>{` component.      `}</p>\n    <h2 {...{\n      \"id\": \"creating-a-todo-item\"\n    }}>{`Creating a todo item`}</h2>\n    <p>{`If you remember in `}<a parentName=\"p\" {...{\n        \"href\": \"lesson2.md\"\n      }}>{`lesson 2`}</a>{`, we defined a `}<inlineCode parentName=\"p\">{`MAX_TODO_ITEMS`}</inlineCode>{` value within a global configuration file `}<inlineCode parentName=\"p\">{`defaults.json`}</inlineCode>{` at the root of the App Builder App.`}</p>\n    <p>{`We'll use it to block the user from creating too many todo items inside a todo list. We can import the value similarly to what we have done in the Runtime action.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`import { MAX_TODO_ITEMS } from '../../defaults.json';\n`}</code></pre>\n    <p>{`Then we're going to use the `}<a parentName=\"p\" {...{\n        \"href\": \"https://reactjs.org/docs/hooks-intro.html\"\n      }}>{`React hook`}</a>{` `}<inlineCode parentName=\"p\">{`useState`}</inlineCode>{` again to bind it to the TextField to create a new todo item similarly to the previous lesson. `}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`const [newTodo, setNewTodo] = useState('');\n`}</code></pre>\n    <p>{`This time we're going to disable the input once we reach the count of `}<inlineCode parentName=\"p\">{`MAX_TODO_ITEMS`}</inlineCode>{` by setting the `}<inlineCode parentName=\"p\">{`isDisabled`}</inlineCode>{` prop.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`<TextField\n  autoComplete=\"off\"\n  isDisabled={todoItems.length >= MAX_TODO_ITEMS}\n  aria-label=\"New todo\"\n  width=\"100%\"\n  value={newTodo}\n  onChange={(value) => {\n    setNewTodo(value);\n  }}\n  placeholder=\"Todo\"\n  minLength={1}\n  maxLength={140}\n/>\n<ActionButton type=\"submit\" isDisabled={todoItems.length >= MAX_TODO_ITEMS}>\n  <Add />\n</ActionButton>\n`}</code></pre>\n    <p>{`Finally, we'll wrap the `}<inlineCode parentName=\"p\">{`TextField`}</inlineCode>{` and the submit `}<inlineCode parentName=\"p\">{`ActionButton`}</inlineCode>{` with a `}<inlineCode parentName=\"p\">{`Form`}</inlineCode>{` component so that we can invoke the `}<inlineCode parentName=\"p\">{`onUpdate`}</inlineCode>{` callback function on form submission.\nWe'll prevent the default form submission behavior with `}<inlineCode parentName=\"p\">{`event.preventDefault()`}</inlineCode>{` and create a new todo item object that we pass to the callback function.\nAdditionally, we're clearing the value of `}<inlineCode parentName=\"p\">{`TextField`}</inlineCode>{`.  `}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`<Form\n  onSubmit={async (event) => {\n    event.preventDefault();\n\n    const index = todoItems.length;\n    const newTodoItem = { name, id: index, value: newTodo, done: false };\n    setTodoItems([newTodoItem, ...todoItems]);\n    setNewTodo('');\n\n    onUpdate && (await onUpdate(name, newTodoItem));\n  }}>\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"deleting-a-todo-list\"\n    }}>{`Deleting a todo list`}</h3>\n    <p>{`Next to the todo list name, we'll add a trigger to delete the list. The trigger will open an `}<inlineCode parentName=\"p\">{`AlertDialog`}</inlineCode>{` to warn the user about the destructive action.\nConfirming the operation will simply call the `}<inlineCode parentName=\"p\">{`onDelete`}</inlineCode>{` callback function passing it the `}<inlineCode parentName=\"p\">{`name`}</inlineCode>{` of the todo list. The dialog will close itself automatically.  `}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`<DialogTrigger>\n    <ActionButton isQuiet>\n      <Close />\n    </ActionButton>\n    <AlertDialog\n      title=\"Clear todo list\"\n      variant=\"destructive\"\n      primaryActionLabel=\"Delete\"\n      secondaryActionLabel=\"Cancel\"\n      onPrimaryAction={async () => {\n        onDelete && (await onDelete(name));\n      }}>\n      This action will clear the todo list <strong>{name}</strong>. Are you sure you want to continue ?\n    </AlertDialog>\n</DialogTrigger>\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"full-component\"\n    }}>{`Full component`}</h2>\n    <p>{`Finally, we'll wrap the whole component inside a `}<inlineCode parentName=\"p\">{`Well`}</inlineCode>{` and use the Flex layout to vertically align the `}<inlineCode parentName=\"p\">{`Todo`}</inlineCode>{` items.`}</p>\n    <p>{`See the full component code `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/AdobeDocs/adobeio-samples-todoapp/blob/master/web-src/src/components/TodoList.js\"\n      }}>{`here`}</a>{`.`}</p>\n    <p><span parentName=\"p\" {...{\n        \"className\": \"gatsby-resp-image-wrapper\",\n        \"style\": {\n          \"position\": \"relative\",\n          \"display\": \"block\",\n          \"marginLeft\": \"auto\",\n          \"marginRight\": \"auto\",\n          \"maxWidth\": \"578px\"\n        }\n      }}>{`\n      `}<span parentName=\"span\" {...{\n          \"className\": \"gatsby-resp-image-background-image\",\n          \"style\": {\n            \"paddingBottom\": \"170.3125%\",\n            \"position\": \"relative\",\n            \"bottom\": \"0\",\n            \"left\": \"0\",\n            \"display\": \"block\",\n            \"transition\": \"opacity 0.5s 0.5s\",\n            \"pointerEvents\": \"none\"\n          }\n        }}></span>{`\n  `}<picture parentName=\"span\">{`\n          `}<source parentName=\"picture\" {...{\n            \"srcSet\": [\"/adobe-developer-app-builder/static/4b62c399ea23e48390c508b2e54d54d7/5530d/todolist.webp 320w\", \"/adobe-developer-app-builder/static/4b62c399ea23e48390c508b2e54d54d7/9cd87/todolist.webp 578w\"],\n            \"sizes\": \"(max-width: 578px) 100vw, 578px\",\n            \"type\": \"image/webp\"\n          }}></source>{`\n          `}<source parentName=\"picture\" {...{\n            \"srcSet\": [\"/adobe-developer-app-builder/static/4b62c399ea23e48390c508b2e54d54d7/dd4a7/todolist.png 320w\", \"/adobe-developer-app-builder/static/4b62c399ea23e48390c508b2e54d54d7/8c7b4/todolist.png 578w\"],\n            \"sizes\": \"(max-width: 578px) 100vw, 578px\",\n            \"type\": \"image/png\"\n          }}></source>{`\n          `}<img parentName=\"picture\" {...{\n            \"className\": \"gatsby-resp-image-image\",\n            \"src\": \"/adobe-developer-app-builder/static/4b62c399ea23e48390c508b2e54d54d7/8c7b4/todolist.png\",\n            \"alt\": \"App\",\n            \"title\": \"App\",\n            \"loading\": \"lazy\",\n            \"style\": {\n              \"width\": \"100%\",\n              \"height\": \"100%\",\n              \"margin\": \"0\",\n              \"verticalAlign\": \"middle\",\n              \"position\": \"absolute\",\n              \"opacity\": \"0\",\n              \"transition\": \"opacity 0.5s\",\n              \"color\": \"inherit\",\n              \"boxShadow\": \"inset 0px 0px 0px 400px none\",\n              \"top\": \"0\",\n              \"left\": \"0\"\n            }\n          }}></img>{`\n        `}</picture>{`\n    `}</span></p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"sourceRoot":""}