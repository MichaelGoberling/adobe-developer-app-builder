"use strict";(self.webpackChunkadobe_developer_app_builder=self.webpackChunkadobe_developer_app_builder||[]).push([[9230],{21870:function(e,t,a){a.r(t),a.d(t,{_frontmatter:function(){return m},default:function(){return s}});var n=a(87462),o=a(63366),d=(a(15007),a(64983)),p=a(91515),l=["components"],m={},i={_frontmatter:m},r=p.Z;function s(e){var t=e.components,a=(0,o.Z)(e,l);return(0,d.mdx)(r,(0,n.Z)({},i,a,{components:t,mdxType:"MDXLayout"}),(0,d.mdx)("h1",{id:"lesson-4-setup-the-todo-component"},"Lesson 4: Setup the Todo component"),(0,d.mdx)("p",null,"In this lesson, we'll create a Todo React component which is only composed of 2 React Spectrum components: ",(0,d.mdx)("a",{parentName:"p",href:"https://react-spectrum.adobe.com/react-spectrum/Checkbox.html"},"Checkbox")," and ",(0,d.mdx)("a",{parentName:"p",href:"https://react-spectrum.adobe.com/react-spectrum/TextField.html"},"TextField"),"."),(0,d.mdx)("p",null,"Similarly to ",(0,d.mdx)("a",{parentName:"p",href:"lesson3.md"},"lesson 3"),", we'll create the React component file under ",(0,d.mdx)("inlineCode",{parentName:"p"},"web-src/src/components/")," and name it ",(0,d.mdx)("inlineCode",{parentName:"p"},"Todo.js"),"."),(0,d.mdx)("h2",{id:"import-react-spectrum-components"},"Import React Spectrum components"),(0,d.mdx)("p",null,"This component will make use of several React Spectrum components: "),(0,d.mdx)("ul",null,(0,d.mdx)("li",{parentName:"ul"},(0,d.mdx)("a",{parentName:"li",href:"https://react-spectrum.adobe.com/react-spectrum/Flex.html"},"Flex")," for the layout."),(0,d.mdx)("li",{parentName:"ul"},(0,d.mdx)("a",{parentName:"li",href:"https://react-spectrum.adobe.com/react-spectrum/TextField.html"},"TextField")," the input field for the todo value."),(0,d.mdx)("li",{parentName:"ul"},(0,d.mdx)("a",{parentName:"li",href:"https://react-spectrum.adobe.com/react-spectrum/Checkbox.html"},"Checkbox")," to check a todo which is done.")),(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-javascript"},"import { Flex, Checkbox, TextField } from '@adobe/react-spectrum';\n")),(0,d.mdx)("h2",{id:"component-properties"},"Component properties"),(0,d.mdx)("p",null,"The component will accept 3 properties:"),(0,d.mdx)("ul",null,(0,d.mdx)("li",{parentName:"ul"},(0,d.mdx)("inlineCode",{parentName:"li"},"name")," to identify the todo list name "),(0,d.mdx)("li",{parentName:"ul"},(0,d.mdx)("inlineCode",{parentName:"li"},"todo")," which holds the todo id, text value and checked status."),(0,d.mdx)("li",{parentName:"ul"},(0,d.mdx)("inlineCode",{parentName:"li"},"onUpdate")," which is the callback function invoked whenever the todo item is updated.")),(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-javascript"},"function Todo({ name, todo, onUpdate }) {\n  // ...\n}\n")),(0,d.mdx)("h2",{id:"updating-a-todo-item"},"Updating a todo item"),(0,d.mdx)("p",null,"Again, we're going to use the ",(0,d.mdx)("a",{parentName:"p",href:"https://reactjs.org/docs/hooks-state.html"},"State hook")," ",(0,d.mdx)("inlineCode",{parentName:"p"},"useState")," to declare 2 state variables and bind one to the Checkbox and the other one to the Textfield."),(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-javascript"},"const [value, setValue] = useState(todo.value);\nconst [isDone, setIsDone] = useState(todo.done);\n")),(0,d.mdx)("p",null,"Here we use the ",(0,d.mdx)("inlineCode",{parentName:"p"},"todo")," properties ",(0,d.mdx)("inlineCode",{parentName:"p"},"value")," and ",(0,d.mdx)("inlineCode",{parentName:"p"},"done")," to define the default state values."),(0,d.mdx)("p",null,"Next we'll bind the ",(0,d.mdx)("inlineCode",{parentName:"p"},"value")," state to the TextField.\nWe'll also update the ",(0,d.mdx)("inlineCode",{parentName:"p"},"value")," state with ",(0,d.mdx)("inlineCode",{parentName:"p"},"setValue()")," and invoke the callback function ",(0,d.mdx)("inlineCode",{parentName:"p"},"onUpdate")," on every input change.\n",(0,d.mdx)("inlineCode",{parentName:"p"},"onUpdate")," takes 2 parameters: the todo list name and the todo object."),(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-jsx"},'<TextField\n    isDisabled={isDone}\n    aria-label="Todo"\n    width="100%"\n    value={value}\n    onChange={async (value) => {\n      todo.value = value;\n      setValue(value);\n    \n      onUpdate && (await onUpdate(name, todo));\n    }}\n    isQuiet\n/>\n')),(0,d.mdx)("p",null,"We'll do exactly the same for ",(0,d.mdx)("inlineCode",{parentName:"p"},"Checkbox"),"."),(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-jsx"},'<Checkbox\n    aria-label="done"\n    isSelected={isDone}\n    onChange={async (value) => {\n      todo.done = value;\n      setIsDone(value);\n    \n      onUpdate && (await onUpdate(name, todo));\n    }}\n    isEmphasized\n    value={value}\n/>\n')),(0,d.mdx)("h2",{id:"full-component"},"Full component"),(0,d.mdx)("p",null,"Finally, we're using the Flex layout to align the Checkbox with the TextField and we're done with our Todo component."),(0,d.mdx)("p",null,"See the full component code ",(0,d.mdx)("a",{parentName:"p",href:"https://github.com/AdobeDocs/adobeio-samples-todoapp/blob/master/web-src/src/components/Todo.js"},"here"),"."),(0,d.mdx)("p",null,(0,d.mdx)("span",{parentName:"p",className:"gatsby-resp-image-wrapper",style:{position:"relative",display:"block",marginLeft:"auto",marginRight:"auto",maxWidth:"504px"}},"\n      ",(0,d.mdx)("span",{parentName:"span",className:"gatsby-resp-image-background-image",style:{paddingBottom:"15.937499999999998%",position:"relative",bottom:"0",left:"0",display:"block",transition:"opacity 0.5s 0.5s",pointerEvents:"none"}}),"\n  ",(0,d.mdx)("picture",{parentName:"span"},"\n          ",(0,d.mdx)("source",{parentName:"picture",srcSet:["/adobe-developer-app-builder/static/89eee2f563efb975e62ccbbbee6c61d5/5530d/todo.webp 320w","/adobe-developer-app-builder/static/89eee2f563efb975e62ccbbbee6c61d5/c422e/todo.webp 504w"],sizes:"(max-width: 504px) 100vw, 504px",type:"image/webp"}),"\n          ",(0,d.mdx)("source",{parentName:"picture",srcSet:["/adobe-developer-app-builder/static/89eee2f563efb975e62ccbbbee6c61d5/dd4a7/todo.png 320w","/adobe-developer-app-builder/static/89eee2f563efb975e62ccbbbee6c61d5/7f322/todo.png 504w"],sizes:"(max-width: 504px) 100vw, 504px",type:"image/png"}),"\n          ",(0,d.mdx)("img",{parentName:"picture",className:"gatsby-resp-image-image",src:"/adobe-developer-app-builder/static/89eee2f563efb975e62ccbbbee6c61d5/7f322/todo.png",alt:"Todo",title:"Todo",loading:"lazy",style:{width:"100%",height:"100%",margin:"0",verticalAlign:"middle",position:"absolute",opacity:"0",transition:"opacity 0.5s",color:"inherit",boxShadow:"inset 0px 0px 0px 400px none",top:"0",left:"0"}}),"\n        "),"\n    ")))}s.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-pages-resources-todo-app-lesson-4-md-4b1e01876d5b40be7dd7.js.map