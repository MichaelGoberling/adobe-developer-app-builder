"use strict";(self.webpackChunkadobe_developer_app_builder=self.webpackChunkadobe_developer_app_builder||[]).push([[7682],{85935:function(e,a,n){n.r(a),n.d(a,{_frontmatter:function(){return m},default:function(){return l}});var t=n(87462),r=n(63366),i=(n(15007),n(64983)),s=n(91515),o=["components"],m={},d={_frontmatter:m},p=s.Z;function l(e){var a=e.components,n=(0,r.Z)(e,o);return(0,i.mdx)(p,(0,t.Z)({},d,n,{components:a,mdxType:"MDXLayout"}),(0,i.mdx)("h1",{id:"lesson-3-types-of-alarm-feed"},"Lesson 3: Types of Alarm Feed"),(0,i.mdx)("p",null,"Beside the ",(0,i.mdx)("inlineCode",{parentName:"p"},"/whisk.system/alarms/interval")," feed in lesson 2, the alarms provider in Adobe I/O Runtime supports other types of feed."),(0,i.mdx)("h2",{id:"firing-a-trigger-once"},"Firing a trigger once"),(0,i.mdx)("p",null,"The ",(0,i.mdx)("inlineCode",{parentName:"p"},"/whisk.system/alarms/once")," feed allows you to ",(0,i.mdx)("a",{parentName:"p",href:"https://github.com/apache/openwhisk-package-alarms#firing-a-trigger-event-once"},"fire event once at a specific time"),". The only required param is ",(0,i.mdx)("inlineCode",{parentName:"p"},"date")," to indicate when the trigger is fired. Optional params are ",(0,i.mdx)("inlineCode",{parentName:"p"},"trigger_payload")," and ",(0,i.mdx)("inlineCode",{parentName:"p"},"deleteAfterFire"),"."),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-yaml"},"triggers:\n  runMeOnce:\n    feed: /whisk.system/alarms/once\n    inputs: \n      date: YYYY-MM-DDTHH:mm:ss.sssZ\n      deleteAfterFire: true\n")),(0,i.mdx)("p",null,"Please note that ",(0,i.mdx)("inlineCode",{parentName:"p"},"YYYY-MM-DDTHH:mm:ss.sssZ")," is just a format for this field. You are free to update it with the exact date and time you want."),(0,i.mdx)("h2",{id:"firing-a-trigger-on-a-time-based-schedule-using-cron"},"Firing a trigger on a time-based schedule using cron"),(0,i.mdx)("p",null,"The ",(0,i.mdx)("inlineCode",{parentName:"p"},"/whisk.system/alarms/alarm")," feed allows you to ",(0,i.mdx)("a",{parentName:"p",href:"https://github.com/apache/openwhisk-package-alarms#firing-a-trigger-on-a-time-based-schedule-using-cron"},"fire event on a time-based schedule using cron"),". This is more generic than the ",(0,i.mdx)("inlineCode",{parentName:"p"},"interval")," and ",(0,i.mdx)("inlineCode",{parentName:"p"},"once")," feeds, because you can write crontab to configure the alarm service to trigger at the exact time and interval you want. The only required param is ",(0,i.mdx)("inlineCode",{parentName:"p"},"cron"),", which is a string based on the ",(0,i.mdx)("a",{parentName:"p",href:"http://crontab.org"},"UNIX crontab syntax")," that indicates when to fire the trigger in UTC. Optional params are ",(0,i.mdx)("inlineCode",{parentName:"p"},"trigger_payload"),", ",(0,i.mdx)("inlineCode",{parentName:"p"},"timezone"),", ",(0,i.mdx)("inlineCode",{parentName:"p"},"startDate")," and ",(0,i.mdx)("inlineCode",{parentName:"p"},"stopDate"),". "),(0,i.mdx)("p",null,"The following example shows a cron schedule at 2am on Sundays in Central Europe Timezone (CET)."),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-yaml"},"triggers:\n  sunday2am:\n    feed: /whisk.system/alarms/alarm\n    inputs: \n      cron: 0 2 * * 7\n      timezone: CET\n      startDate: 1601918992704\n      stopDate: 1651918992704\n")))}l.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-pages-resources-cron-jobs-lesson-3-md-36deb835e8a0a0faeb84.js.map