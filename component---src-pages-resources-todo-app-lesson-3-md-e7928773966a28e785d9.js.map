{"version":3,"file":"component---src-pages-resources-todo-app-lesson-3-md-e7928773966a28e785d9.js","mappings":"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","sources":["webpack://adobe-developer-app-builder/./src/pages/resources/todo-app/lesson3.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/adobe-developer-app-builder/adobe-developer-app-builder/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"lesson-3-setup-the-createtodolist-component\"\n    }}>{`Lesson 3: Setup the CreateTodoList component`}</h1>\n    <p>{`In this lesson, we'll create a first React component that will be used to perform a create operation to generate a todo list.\nThe only value that will be passed to create a todo list is its name.`}</p>\n    <p>{`First, we'll create the React component file under `}<inlineCode parentName=\"p\">{`web-src/src/components/`}</inlineCode>{` and name it `}<inlineCode parentName=\"p\">{`CreateTodoList.js`}</inlineCode>{`.\nIf you're not familiar with React components and props, please first read the React documentation on `}<a parentName=\"p\" {...{\n        \"href\": \"https://reactjs.org/docs/introducing-jsx.html\"\n      }}>{`JSX`}</a>{` and `}<a parentName=\"p\" {...{\n        \"href\": \"https://reactjs.org/docs/components-and-props.html\"\n      }}>{`Components and props`}</a>{`.`}</p>\n    <h2 {...{\n      \"id\": \"import-react-spectrum-components\"\n    }}>{`Import React Spectrum components`}</h2>\n    <p>{`If you choose the React Spectrum template, the App Builder app will have `}<inlineCode parentName=\"p\">{`@adobe/react-spectrum`}</inlineCode>{` dependencies installed by default.`}</p>\n    <p>{`This component will make use of several React Spectrum components: `}</p>\n    <ul>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://react-spectrum.adobe.com/react-spectrum/Flex.html\"\n        }}>{`Flex`}</a>{` for the layout.`}</li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://react-spectrum.adobe.com/react-spectrum/Form.html\"\n        }}>{`Form`}</a>{` to submit the todo list.`}</li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://react-spectrum.adobe.com/react-spectrum/TextField.html\"\n        }}>{`TextField`}</a>{` as the main input field.`}</li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://react-spectrum.adobe.com/react-spectrum/Button.html\"\n        }}>{`Button`}</a>{` to trigger form submission.`}</li>\n    </ul>\n    <p>{`We can import them all with a single statement.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`import { Flex, Form, TextField, Button } from '@adobe/react-spectrum';\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"component-property\"\n    }}>{`Component property`}</h2>\n    <p>{`The component will accept a single property, a callback function `}<inlineCode parentName=\"p\">{`onCreate`}</inlineCode>{` invoked when a todo list is created.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`function CreateTodoList({ onCreate }) {\n  // ...\n}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"creating-a-todo-list\"\n    }}>{`Creating a todo list`}</h2>\n    <p>{`We'll declare a state variable and bind it to the Textfield in order to retrieve the input value.\nIf you're not familiar with React hooks, please read the `}<a parentName=\"p\" {...{\n        \"href\": \"https://reactjs.org/docs/hooks-intro.html\"\n      }}>{`hooks introduction`}</a>{`.`}</p>\n    <p>{`First, we have to import the `}<a parentName=\"p\" {...{\n        \"href\": \"https://reactjs.org/docs/hooks-state.html\"\n      }}>{`State Hook`}</a>{` `}<inlineCode parentName=\"p\">{`useState`}</inlineCode>{` from `}<inlineCode parentName=\"p\">{`react`}</inlineCode>{` before being able to define a state variable.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`import { useState } from 'react';\n`}</code></pre>\n    <p>{`Calling `}<inlineCode parentName=\"p\">{`useState`}</inlineCode>{` will return an `}<inlineCode parentName=\"p\">{`array`}</inlineCode>{` with 2 values: the state value and a function to set the state value.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`const [todoListName, setTodoListName] = useState('');\n`}</code></pre>\n    <p>{`We're using a `}<a parentName=\"p\" {...{\n        \"href\": \"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Destructuring_assignment\"\n      }}>{`destructuring assignment`}</a>{` to retrieve and declare both values.\nBy default on initialization, the value of `}<inlineCode parentName=\"p\">{`todoListName`}</inlineCode>{` is set to empty string `}<inlineCode parentName=\"p\">{`''`}</inlineCode>{`; `}</p>\n    <p>{`Next we'll bind the `}<inlineCode parentName=\"p\">{`todoListName`}</inlineCode>{` state to the TextField value and update it with `}<inlineCode parentName=\"p\">{`setTodoListName()`}</inlineCode>{` on every input change.\nLearn more about React event handling `}<a parentName=\"p\" {...{\n        \"href\": \"https://reactjs.org/docs/handling-events.html\"\n      }}>{`here`}</a>{`.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`<TextField\n    value={todoListName}\n    onChange={(value) => {\n      setTodoListName(value);\n    }}\n    label=\"Todo list\"\n    placeholder=\"Name\"\n/>\n<Button type=\"submit\" variant=\"cta\">\n  Create\n</Button>\n`}</code></pre>\n    <p>{`We'll wrap the `}<inlineCode parentName=\"p\">{`TextField`}</inlineCode>{` and submit `}<inlineCode parentName=\"p\">{`Button`}</inlineCode>{` with a `}<inlineCode parentName=\"p\">{`Form`}</inlineCode>{` component so that we can invoke the callback function on form submission.\nWe'll prevent the default form submission behavior with `}<inlineCode parentName=\"p\">{`event.preventDefault()`}</inlineCode>{` and pass the todo list name as parameter to the callback function.  `}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`<Form\n  onSubmit={async (event) => {\n    event.preventDefault();\n    \n    onCreate && (await onCreate(todoListName));\n}}>\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"the-full-component\"\n    }}>{`The full component`}</h2>\n    <p>{`Finally, we'll add the Flex layout to align the TextField with the Button to obtain a fully functional React component.\nRead more about React rendering `}<a parentName=\"p\" {...{\n        \"href\": \"https://reactjs.org/docs/rendering-elements.html\"\n      }}>{`here`}</a>{`.`}</p>\n    <p>{`See the full component code `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/AdobeDocs/adobeio-samples-todoapp/blob/master/web-src/src/components/CreateTodoList.js\"\n      }}>{`here`}</a>{`.`}</p>\n    <p><span parentName=\"p\" {...{\n        \"className\": \"gatsby-resp-image-wrapper\",\n        \"style\": {\n          \"position\": \"relative\",\n          \"display\": \"block\",\n          \"marginLeft\": \"auto\",\n          \"marginRight\": \"auto\",\n          \"maxWidth\": \"612px\"\n        }\n      }}>{`\n      `}<span parentName=\"span\" {...{\n          \"className\": \"gatsby-resp-image-background-image\",\n          \"style\": {\n            \"paddingBottom\": \"28.125%\",\n            \"position\": \"relative\",\n            \"bottom\": \"0\",\n            \"left\": \"0\",\n            \"display\": \"block\",\n            \"transition\": \"opacity 0.5s 0.5s\",\n            \"pointerEvents\": \"none\"\n          }\n        }}></span>{`\n  `}<picture parentName=\"span\">{`\n          `}<source parentName=\"picture\" {...{\n            \"srcSet\": [\"/adobe-developer-app-builder/static/c89f644568749b429c7ab3572d14d33c/5530d/createtodolist.webp 320w\", \"/adobe-developer-app-builder/static/c89f644568749b429c7ab3572d14d33c/d408e/createtodolist.webp 612w\"],\n            \"sizes\": \"(max-width: 612px) 100vw, 612px\",\n            \"type\": \"image/webp\"\n          }}></source>{`\n          `}<source parentName=\"picture\" {...{\n            \"srcSet\": [\"/adobe-developer-app-builder/static/c89f644568749b429c7ab3572d14d33c/dd4a7/createtodolist.png 320w\", \"/adobe-developer-app-builder/static/c89f644568749b429c7ab3572d14d33c/dbf98/createtodolist.png 612w\"],\n            \"sizes\": \"(max-width: 612px) 100vw, 612px\",\n            \"type\": \"image/png\"\n          }}></source>{`\n          `}<img parentName=\"picture\" {...{\n            \"className\": \"gatsby-resp-image-image\",\n            \"src\": \"/adobe-developer-app-builder/static/c89f644568749b429c7ab3572d14d33c/dbf98/createtodolist.png\",\n            \"alt\": \"CreateTodoList\",\n            \"title\": \"CreateTodoList\",\n            \"loading\": \"lazy\",\n            \"style\": {\n              \"width\": \"100%\",\n              \"height\": \"100%\",\n              \"margin\": \"0\",\n              \"verticalAlign\": \"middle\",\n              \"position\": \"absolute\",\n              \"opacity\": \"0\",\n              \"transition\": \"opacity 0.5s\",\n              \"color\": \"inherit\",\n              \"boxShadow\": \"inset 0px 0px 0px 400px none\",\n              \"top\": \"0\",\n              \"left\": \"0\"\n            }\n          }}></img>{`\n        `}</picture>{`\n    `}</span></p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"sourceRoot":""}